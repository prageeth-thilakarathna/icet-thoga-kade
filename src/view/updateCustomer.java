/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import database.databaseConnection;
import controller.centralController;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author ygpra
 */
public class updateCustomer extends javax.swing.JPanel {

    private static final updateCustomer instance = new updateCustomer();
    private String searchName;
    private String searchAddress;
    private double searchSalary;

    /**
     * Creates new form updateCustomer
     */
    private updateCustomer() {
        initComponents();
        custID.setEditable(false);
        btnUpdate.setEnabled(false);
        btnSearch.setEnabled(true);
        inputCustId.setEditable(true);
        inputCustId.setBackground(centralController.LightGrey);
        inputSalary.setEditable(false);
        inputSalary.setBackground(centralController.DarkGrey);
        inputAddress.setEditable(false);
        inputAddress.setBackground(centralController.DarkGrey);
        inputName.setEditable(false);
        inputName.setBackground(centralController.DarkGrey);
    }

    public static updateCustomer getUpdateCustomerInstance() {
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        enterCustIdLabel = new javax.swing.JLabel();
        inputCustId = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        customerIdLabel = new javax.swing.JLabel();
        custID = new javax.swing.JTextField();
        customerNameLabel = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        inputAddress = new javax.swing.JTextField();
        salaryLabel = new javax.swing.JLabel();
        inputSalary = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        salaryErrorDisplay = new javax.swing.JLabel();

        setBackground(new java.awt.Color(239, 241, 255));

        title.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(12, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Update Customer");

        enterCustIdLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        enterCustIdLabel.setForeground(new java.awt.Color(12, 0, 0));
        enterCustIdLabel.setText("Enter Customer ID :");

        inputCustId.setBackground(new java.awt.Color(199, 200, 204));
        inputCustId.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputCustId.setForeground(new java.awt.Color(12, 0, 0));
        inputCustId.setBorder(null);

        btnUpdate.setBackground(new java.awt.Color(0, 127, 115));
        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(239, 241, 255));
        btnUpdate.setText("Update");
        btnUpdate.setBorder(null);
        btnUpdate.setBorderPainted(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.setFocusPainted(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(98, 99, 213));
        btnCancel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(239, 241, 255));
        btnCancel.setText("Cancel");
        btnCancel.setBorder(null);
        btnCancel.setBorderPainted(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.setFocusPainted(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        customerIdLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        customerIdLabel.setForeground(new java.awt.Color(12, 0, 0));
        customerIdLabel.setText("Customer ID : ");

        custID.setBackground(new java.awt.Color(169, 169, 169));
        custID.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        custID.setForeground(new java.awt.Color(12, 0, 0));
        custID.setBorder(null);

        customerNameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        customerNameLabel.setForeground(new java.awt.Color(12, 0, 0));
        customerNameLabel.setText("Customer Name : ");

        inputName.setBackground(new java.awt.Color(199, 200, 204));
        inputName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputName.setForeground(new java.awt.Color(12, 0, 0));
        inputName.setBorder(null);
        inputName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerNameKeyTyped(evt);
            }
        });

        addressLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(12, 0, 0));
        addressLabel.setText("Address : ");

        inputAddress.setBackground(new java.awt.Color(199, 200, 204));
        inputAddress.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputAddress.setForeground(new java.awt.Color(12, 0, 0));
        inputAddress.setBorder(null);
        inputAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });

        salaryLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        salaryLabel.setForeground(new java.awt.Color(12, 0, 0));
        salaryLabel.setText("Salary : ");

        inputSalary.setBackground(new java.awt.Color(199, 200, 204));
        inputSalary.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputSalary.setForeground(new java.awt.Color(12, 0, 0));
        inputSalary.setBorder(null);
        inputSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salaryKeyTyped(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(237, 150, 11));
        btnSearch.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(239, 241, 255));
        btnSearch.setText("Search");
        btnSearch.setBorder(null);
        btnSearch.setBorderPainted(false);
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setFocusPainted(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        salaryErrorDisplay.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerNameLabel)
                            .addComponent(addressLabel)
                            .addComponent(customerIdLabel)
                            .addComponent(salaryLabel))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(custID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salaryErrorDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enterCustIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCustId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterCustIdLabel)
                    .addComponent(inputCustId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIdLabel)
                    .addComponent(custID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameLabel)
                    .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(inputAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salaryLabel)
                    .addComponent(inputSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salaryErrorDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            // update customer
            String id = custID.getText();
            String name = inputName.getText();
            String address = inputAddress.getText();
            String salary = inputSalary.getText();
            String sql = "UPDATE customer SET name=?, address=?, salary=? WHERE id=?";

            databaseConnection dBConnection = databaseConnection.getInstance();
            Connection connection = dBConnection.getConnection();
            PreparedStatement stm = connection.prepareStatement(sql);

            stm.setString(1, name);
            stm.setString(2, address);
            stm.setString(3, salary);
            stm.setString(4, id);

            int res = stm.executeUpdate();
            if (res > 0) {
                String tempId = inputCustId.getText();
                inputCustId.setText("");
                custID.setText("");
                inputName.setText("");
                inputAddress.setText("");
                inputSalary.setText("");
                btnUpdate.setEnabled(false);
                btnSearch.setEnabled(true);
                inputCustId.setEditable(true);
                inputCustId.setBackground(centralController.LightGrey);
                inputSalary.setEditable(false);
                inputSalary.setBackground(centralController.DarkGrey);
                inputAddress.setEditable(false);
                inputAddress.setBackground(centralController.DarkGrey);
                inputName.setEditable(false);
                inputName.setBackground(centralController.DarkGrey);
                JOptionPane.showOptionDialog(null, tempId + " Customer Update is Successful.", "Success", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, centralController.successIcon, centralController.getInstance().getOkButton(), centralController.getInstance().getOkButton()[0]);
            } else {
                JOptionPane.showOptionDialog(null, "Failed! Has some issues with Updating " + id + " Customer.", "Error", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, centralController.errorIcon, centralController.getInstance().getOkButton(), centralController.getInstance().getOkButton()[0]);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showOptionDialog(null, ex.getMessage(), "Error", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, centralController.errorIcon, centralController.getInstance().getOkButton(), centralController.getInstance().getOkButton()[0]);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        inputCustId.setText("");
        custID.setText("");
        inputName.setText("");
        inputAddress.setText("");
        inputSalary.setText("");
        btnUpdate.setEnabled(false);
        btnSearch.setEnabled(true);
        inputCustId.setEditable(true);
        inputCustId.setBackground(centralController.LightGrey);
        inputSalary.setEditable(false);
        inputSalary.setBackground(centralController.DarkGrey);
        inputAddress.setEditable(false);
        inputAddress.setBackground(centralController.DarkGrey);
        inputName.setEditable(false);
        inputName.setBackground(centralController.DarkGrey);

        instance.setVisible(false);
        customerHome.getCustomerHomeInstance().setVisible(true);
        centralController.getInstance().enableNavBtn();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // search customer
            String id = inputCustId.getText();
            String sql = "SELECT * FROM customer WHERE id='" + id + "'";

            databaseConnection dBConnection = databaseConnection.getInstance();
            Connection connection = dBConnection.getConnection();
            Statement stm = connection.createStatement();
            ResultSet rst = stm.executeQuery(sql);
            rst.next();

            custID.setText(rst.getString("id"));
            inputName.setText(rst.getString("name"));
            searchName = inputName.getText();
            inputAddress.setText(rst.getString("address"));
            searchAddress = inputAddress.getText();
            inputSalary.setText(rst.getString("salary"));
            searchSalary = Double.parseDouble(inputSalary.getText());
            btnUpdate.setEnabled(false);
            btnSearch.setEnabled(false);
            inputCustId.setEditable(false);
            inputCustId.setBackground(centralController.DarkGrey);
            inputSalary.setEditable(true);
            inputSalary.setBackground(centralController.LightGrey);
            inputAddress.setEditable(true);
            inputAddress.setBackground(centralController.LightGrey);
            inputName.setEditable(true);
            inputName.setBackground(centralController.LightGrey);

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showOptionDialog(null, ex.getMessage(), "Error", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, centralController.errorIcon, centralController.getInstance().getOkButton(), centralController.getInstance().getOkButton()[0]);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void customerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameKeyTyped
        inputName.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                String value = inputName.getText();
                if (!value.equals(searchName)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String value = inputName.getText();
                if (!value.equals(searchName)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                String value = inputName.getText();
                if (!value.equals(searchName)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

        });
    }//GEN-LAST:event_customerNameKeyTyped

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped
        inputAddress.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                String value = inputAddress.getText();
                if (!value.equals(searchAddress)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String value = inputAddress.getText();
                if (!value.equals(searchAddress)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                String value = inputAddress.getText();
                if (!value.equals(searchAddress)) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

        });
    }//GEN-LAST:event_addressKeyTyped

    private void salaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salaryKeyTyped
        String value = inputSalary.getText();
        char ch = evt.getKeyChar();
        validateSalary(value, ch);
        inputSalary.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                double value = Double.parseDouble(inputSalary.getText());
                if (value != searchSalary) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                double value = 0.00;

                if (inputSalary.getText().length() > 0) {
                    value = Double.parseDouble(inputSalary.getText());
                } else {
                    value = 0.00;
                }

                if (value != searchSalary) {
                    btnUpdate.setEnabled(true);
                } else {
                    btnUpdate.setEnabled(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }

        });
    }//GEN-LAST:event_salaryKeyTyped

    private void validateSalary(String value, char ch) {
        int length = value.length();

        boolean condition = true;
        int count = 0;
        if (length > 0) {
            count++;
        } else {
            count = 0;
        }

        if (count == 0 & ch == '0') {
            condition = false;
        }

        if ((length >= 0 && length < 11) & condition & (ch >= '0' && ch <= '9') || (int) ch == 8 || (int) ch == 46) {
            inputSalary.setEditable(true);
            salaryErrorDisplay.setText("");
        } else {
            inputSalary.setEditable(false);

            if (condition == false) {
                salaryErrorDisplay.setText("* Not a Q==0");
            } else if (length == 11) {
                salaryErrorDisplay.setText("* only 10 digits");
            } else {
                salaryErrorDisplay.setText("* only digits(0-9)");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField custID;
    private javax.swing.JLabel customerIdLabel;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JLabel enterCustIdLabel;
    private javax.swing.JTextField inputAddress;
    private javax.swing.JTextField inputCustId;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputSalary;
    private javax.swing.JLabel salaryErrorDisplay;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
